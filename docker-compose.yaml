version: "3"

networks:
  backend:
    driver: bridge


services:
  traefik:
    image: library/traefik:latest
    container_name: traefik
    restart: always
    # Enables the web UI and tells Traefik to listen to docker
    # 當容器啟動完畢後最後輸入的command
    command:
      - "--api.insecure=true"
      - "--providers.docker"
    ports:
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      # 當掛載docker.sock時可以讓容器監聽主機上所有docker的容器事件
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - backend

  php-81:
    image: php81
    build:
      context: .
      dockerfile: config/php/81/Dockerfile
    expose:
      - 9000
    container_name: php81
    networks:
      - backend

  mysql:
    image: library/mysql:8.0
    container_name: mysql80
    ports:
      - 3306:3306
    networks:
      - backend
    volumes:
      - ./data/mysql-80:/var/lib/mysql
      - ./config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  phpmyadmin:
    image: phpmyadmin:latest
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=root
      - UPLOAD_LIMIT=1G
    ports:
      - "8001:80"
    depends_on:
      - mysql
    networks:
      - backend

  redis-50:
    image: redis:alpine
    container_name: redis-50
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - ./data/redis-50:/data
    networks:
      - backend

  golang-180:
    image: library/golang:1.8.0-alpine
    container_name: golang-180
    networks:
      - backend
    command: tail -f /dev/null

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
    - 5672:5672
    - 15671:15671
    - 15672:15672
    networks:
      - backend
  mongo:
    image: library/mongo:5.0
    ports:
    - 27017:27017
    volumes:
    - ./data/mongo-50:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    networks:
      - backend
